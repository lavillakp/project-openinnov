version: '2.0'
services:
   prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
     - '9090:9090'
    volumes:
     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
     - '--web.console.templates=/usr/share/prometheus/consoles'
   grafana:
    image: grafana/grafana:6.7.1
    container_name: grafana
    depends_on:
     - prometheus
    environment:
     - GF_SECURITY_ADMIN_USER=admin
     - GF_SECURITY_ADMIN_PASSWORD=root19
    volumes:
     - ./grafana/grafana.ini:/etc/grafana/grafana.ini
     - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
     - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
     - ./grafana/grafana.db:/var/lib/grafana/grafana.db
    command:
     - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"
    user: "1000" 

    ports:
     - '3000:3000'
      
   node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
     - '9100:9100'

   apache:
    image: httpd:2.4
    container_name: Serveur-apache
    ports:
     - '8086:80'
    volumes:
     - ./apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
     - ./web/serveur-apache2/index.html:/usr/local/apache2/htdocs/index.html
  
   apache-exporter:
    #image: lusotycoon/apache-exporter
    #image: previousnext/apache-exporter
    image: bitnami/apache-exporter
    container_name: apache-exporter
    ports:
     - '9117:9117'
    command:
     - '-scrape_uri=http://localhost:8086/server-status/?auto'
   
   Nginx: 
    image: nginx:1.15
    container_name: nginx
    restart: always
    ports:
     - '8000:80'
    environment:
     - NGINX_HOST=localhost
    volumes:
     - ./nginx/server1/default.conf:/etc/nginx/conf.d/default.conf
     - ./web/nginx/server1/index.html:/usr/share/nginx/html/index.html

   nginx-exporter:
    image: fish/nginx-exporter
    container_name: Nginx-exporter1
    ports:
     - '9113:9113'
    command:
     - "-nginx.scrape_uri=http://localhost:8000/status"

   New-Nginx:
    image:  nginx:1.15
    container_name: new-nginx
    restart: always
    ports:
     - '8080:80'
    environment:
     - NGINX_HOST=localhost
    volumes:
     - ./nginx/server2/default.conf:/etc/nginx/conf.d/default.conf
     - ./web/nginx/server2/index.html:/usr/share/nginx/html/index.html
  
   New-nginx-exporter:
    image: fish/nginx-exporter
    container_name: Nginx-exporter2
    ports:
     - '9114:9113'
    command:
      - "-nginx.scrape_uri=http://localhost:8080/status"





 



